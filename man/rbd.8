.TH "RBD" "8" "July 10, 2012" "dev" "Ceph"
.SH NAME
rbd \- manage rados block device (RBD) images
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.SH SYNOPSIS
.nf
\fBrbd\fP [ \-c \fIceph.conf\fP ] [ \-m \fImonaddr\fP ] [ \-p | \-\-pool \fIpool\fP ] [
\-\-size \fIsize\fP ] [ \-\-order \fIbits\fP ] [ \fIcommand\fP ... ]
.fi
.sp
.SH DESCRIPTION
.sp
\fBrbd\fP is a utility for manipulating rados block device (RBD) images,
used by the Linux rbd driver and the rbd storage driver for Qemu/KVM.
RBD images are simple block devices that are striped over objects and
stored in a RADOS object store. The size of the objects the image is
striped over must be a power of two.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-c ceph.conf, \-\-conf ceph.conf
Use ceph.conf configuration file instead of the default /etc/ceph/ceph.conf to
determine monitor addresses during startup.
.UNINDENT
.INDENT 0.0
.TP
.B \-m monaddress[:port]
Connect to specified monitor (instead of looking through ceph.conf).
.UNINDENT
.INDENT 0.0
.TP
.B \-p pool, \-\-pool pool
Interact with the given pool. Required by most commands.
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.TP
.B \-\-size size\-in\-mb
Specifies the size (in megabytes) of the new rbd image.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-order bits
Specifies the object size expressed as a number of bits, such that
the object size is \fB1 << order\fP. The default is 22 (4 MB).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-snap snap
Specifies the snapshot name for the specific operation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-user username
Specifies the username to use with the map command.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-secret filename
Specifies a file containing the secret to use with the map command.
.UNINDENT
.SH COMMANDS
.INDENT 0.0
.TP
.B \fBls\fP [\fIpool\-name\fP]
Will list all rbd images listed in the rbd_directory object.
.TP
.B \fBinfo\fP [\fIimage\-name\fP]
Will dump information (such as size and order) about a specific rbd image.
.TP
.B \fBcreate\fP [\fIimage\-name\fP]
Will create a new rbd image. You must also specify the size via \-\-size.
.TP
.B \fBclone\fP [\fIparent\-snapname\fP] [\fIimage\-name\fP]
Will create a clone (copy\-on\-write child) of the parent snapshot.
Size and object order will be identical to parent image unless specified.
.TP
.B \fBresize\fP [\fIimage\-name\fP]
Resizes rbd image. The size parameter also needs to be specified.
.TP
.B \fBrm\fP [\fIimage\-name\fP]
Deletes an rbd image (including all data blocks). If the image has
snapshots, this fails and nothing is deleted.
.TP
.B \fBexport\fP [\fIimage\-name\fP] [\fIdest\-path\fP]
Exports image to dest path.
.TP
.B \fBimport\fP [\fIpath\fP] [\fIdest\-image\fP]
Creates a new image and imports its data from path.
.TP
.B \fBcp\fP [\fIsrc\-image\fP] [\fIdest\-image\fP]
Copies the content of a src\-image into the newly created dest\-image.
.TP
.B \fBmv\fP [\fIsrc\-image\fP] [\fIdest\-image\fP]
Renames an image.  Note: rename across pools is not supported.
.TP
.B \fBsnap\fP ls [\fIimage\-name\fP]
Dumps the list of snapshots inside a specific image.
.TP
.B \fBsnap\fP create [\fIimage\-name\fP]
Creates a new snapshot. Requires the snapshot name parameter specified.
.TP
.B \fBsnap\fP rollback [\fIimage\-name\fP]
Rollback image content to snapshot. This will iterate through the entire blocks
array and update the data head content to the snapshotted version.
.TP
.B \fBsnap\fP rm [\fIimage\-name\fP]
Removes the specified snapshot.
.TP
.B \fBsnap\fP purge [\fIimage\-name\fP]
Removes all snapshots from an image.
.TP
.B \fBmap\fP [\fIimage\-name\fP]
Maps the specified image to a block device via the rbd kernel module.
.TP
.B \fBunmap\fP [\fIdevice\-path\fP]
Unmaps the block device that was mapped via the rbd kernel module.
.TP
.B \fBshowmapped\fP
Show the rbd images that are mapped via the rbd kernel module.
.UNINDENT
.SH IMAGE NAME
.sp
In addition to using the \-\-pool and the \-\-snap options, the image name can include both
the pool name and the snapshot name. The image name format is as follows:
.sp
.nf
.ft C
[pool/]image\-name[@snap]
.ft P
.fi
.sp
Thus an image name that contains a slash character (\(aq/\(aq) requires specifying the pool
name explicitly.
.SH EXAMPLES
.sp
To create a new rbd image that is 100 GB:
.sp
.nf
.ft C
rbd \-p mypool create myimage \-\-size 102400
.ft P
.fi
.sp
or alternatively:
.sp
.nf
.ft C
rbd create mypool/myimage \-\-size 102400
.ft P
.fi
.sp
To use a non\-default object size (8 MB):
.sp
.nf
.ft C
rbd create mypool/myimage \-\-size 102400 \-\-order 23
.ft P
.fi
.sp
To delete an rbd image (be careful!):
.sp
.nf
.ft C
rbd rm mypool/myimage
.ft P
.fi
.sp
To create a new snapshot:
.sp
.nf
.ft C
rbd snap create mypool/myimage@mysnap
.ft P
.fi
.sp
To create a copy\-on\-write clone of a snapshot:
.sp
.nf
.ft C
rbd clone myimage@mysnap cloneimage
.ft P
.fi
.sp
To delete a snapshot:
.sp
.nf
.ft C
rbd snap rm mypool/myimage@mysnap
.ft P
.fi
.sp
To map an image via the kernel with cephx enabled:
.sp
.nf
.ft C
rbd map myimage \-\-user admin \-\-secret secretfile
.ft P
.fi
.sp
To unmap an image:
.sp
.nf
.ft C
rbd unmap /dev/rbd0
.ft P
.fi
.SH AVAILABILITY
.sp
\fBrbd\fP is part of the Ceph distributed file system. Please refer to
the Ceph documentation at \fI\%http://ceph.com/docs\fP for more information.
.SH SEE ALSO
.sp
\fBceph\fP(8),
\fBrados\fP(8)
.SH COPYRIGHT
2012, Inktank Storage, Inc.
.\" Generated by docutils manpage writer.
.
